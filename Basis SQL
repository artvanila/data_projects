-- 1. Отобразите все записи из таблицы company по компаниям, которые закрылись.
SELECT *
FROM company
WHERE status = 'closed';

-- 2. Отобразите количество привлечённых средств для новостных компаний США.
SELECT funding_total
FROM company
WHERE category_code = 'news' AND country_code = 'USA'
ORDER BY funding_total DESC;

-- 3. Найдите общую сумму сделок по покупке одних компаний другими за наличные с 2011 по 2013 год.
SELECT SUM(price_amount) 
FROM acquisition
WHERE term_code = 'cash' AND EXTRACT(YEAR FROM acquired_at) IN (2011, 2012, 2013);

-- 4. Отобразите имя, фамилию и названия аккаунтов людей с именами, начинающимися на 'Silver'.
SELECT first_name, last_name, network_username
FROM people
WHERE network_username LIKE 'Silver%';

-- 5. Выведите на экран всю информацию о людях с фамилией на 'K' и аккаунтами, содержащими 'money'.
SELECT *
FROM people
WHERE network_username LIKE '%money%' AND last_name LIKE 'K%';

-- 6. Для каждой страны отобразите общую сумму привлечённых инвестиций.
SELECT country_code, SUM(funding_total)
FROM company  
GROUP BY country_code
ORDER BY SUM(funding_total) DESC;

-- 7. Составьте таблицу с датами раундов и минимальными/максимальными суммами инвестиций.
SELECT funded_at, 
       MIN(raised_amount) AS min_funding_amount, 
       MAX(raised_amount) AS max_funding_amount
FROM funding_round
GROUP BY funded_at
HAVING MIN(raised_amount) != 0 AND MIN(raised_amount) != MAX(raised_amount);

-- 8. Категории для фондов в зависимости от числа инвестируемых компаний.
SELECT *,
       CASE
           WHEN invested_companies >= 100 THEN 'high_activity'
           WHEN invested_companies >= 20 AND invested_companies < 100 THEN 'middle_activity'
           WHEN invested_companies < 20 THEN 'low_activity'
       END
FROM fund;

-- 9. Среднее количество инвестиционных раундов для каждой категории.
SELECT 
    CASE
        WHEN invested_companies >= 100 THEN 'high_activity'
        WHEN invested_companies >= 20 THEN 'middle_activity'
        ELSE 'low_activity'
    END AS activity,
    ROUND(AVG(investment_rounds), 0) AS avg_investment_rounds
FROM fund
GROUP BY activity
ORDER BY avg_investment_rounds ASC;

-- 10. Страны с минимальными, максимальными и средними данными по компаниям.
SELECT country_code,
       MIN(invested_companies) AS min_invested_companies,
       MAX(invested_companies) AS max_invested_companies,
       AVG(invested_companies) AS avg_invested_companies
FROM fund
WHERE EXTRACT(YEAR FROM CAST(founded_at AS date)) BETWEEN 2010 AND 2012
GROUP BY country_code
HAVING MIN(invested_companies) > 0
ORDER BY avg_invested_companies DESC, country_code
LIMIT 10;

-- 11. Выведите имена сотрудников с их учебными заведениями.
SELECT p.first_name, p.last_name, e.instituition
FROM people AS p
LEFT JOIN education AS e ON e.person_id = p.id;

-- 12. Количество уникальных учебных заведений для каждой компании.
SELECT c.name, COUNT(DISTINCT e.instituition) AS count_instituition
FROM people AS p
JOIN education AS e ON p.id = e.person_id
JOIN company AS c ON p.company_id = c.id
GROUP BY c.name
ORDER BY count_instituition DESC
LIMIT 5;

-- 13. Список уникальных закрытых компаний, для которых первый раунд финансирования был последним.
SELECT DISTINCT c.name
FROM company AS c
JOIN funding_round AS fr ON c.id = fr.company_id
WHERE c.status = 'closed' AND fr.is_first_round = 1 AND is_last_round = 1;

-- 14. Список уникальных номеров сотрудников для компаний из предыдущего запроса.
WITH last_number AS (
    SELECT DISTINCT c.name
    FROM company AS c
    JOIN funding_round AS fr ON c.id = fr.company_id
    WHERE c.status = 'closed' AND fr.is_first_round = 1 AND fr.is_last_round = 1
)
SELECT DISTINCT p.id
FROM people AS p
JOIN company AS c ON p.company_id = c.id
WHERE c.name IN (SELECT name FROM last_number);

-- 15. Уникальные пары сотрудников и учебных заведений для сотрудников из предыдущего запроса.
WITH last_number AS (
    SELECT DISTINCT c.name
    FROM company AS c
    JOIN funding_round AS fr ON c.id = fr.company_id
    WHERE c.status = 'closed' AND fr.is_first_round = 1 AND fr.is_last_round = 1
)
SELECT DISTINCT p.id, e.instituition
FROM people AS p
JOIN company AS c ON p.company_id = c.id
JOIN education AS e ON p.id = e.person_id
WHERE c.name IN (SELECT name FROM last_number);

-- 16. Количество учебных заведений для сотрудников.
WITH last_number AS (
    SELECT DISTINCT c.name
    FROM company AS c
    JOIN funding_round AS fr ON c.id = fr.company_id
    WHERE c.status = 'closed' AND fr.is_first_round = 1 AND fr.is_last_round = 1
)
SELECT DISTINCT p.id, COUNT(e.instituition)
FROM people AS p
JOIN company AS c ON p.company_id = c.id
JOIN education AS e ON p.id = e.person_id
WHERE c.name IN (SELECT name FROM last_number)
GROUP BY p.id;

-- 17. Среднее число учебных заведений для сотрудников.
WITH last_number AS (
    SELECT DISTINCT c.name
    FROM company AS c
    JOIN funding_round AS fr ON c.id = fr.company_id
    WHERE c.status = 'closed' AND fr.is_first_round = 1 AND fr.is_last_round = 1
),
people_from_last_number AS (
    SELECT p.id
    FROM people AS p
    JOIN company AS c ON p.company_id = c.id
    WHERE c.name IN (SELECT name FROM last_number)
)
SELECT AVG(education_count) AS avg_education_count
FROM (
    SELECT p.id, COUNT(e.instituition) AS education_count
    FROM people AS p
    JOIN education AS e ON p.id = e.person_id
    WHERE p.id IN (SELECT id FROM people_from_last_number)
    GROUP BY p.id
) AS education_counts;
-- 18. Напишите похожий запрос: выведите среднее число учебных заведений (всех, не только уникальных), которые окончили сотрудники Socialnet.
WITH last_number AS (
    SELECT DISTINCT c.name
    FROM company AS c
    JOIN funding_round AS fr ON c.id = fr.company_id
    WHERE c.status = 'closed' AND fr.is_first_round = 1 AND fr.is_last_round = 1
),
people_from_last_number AS (
    SELECT p.id
    FROM people AS p
    JOIN company AS c ON p.company_id = c.id
    WHERE c.name = 'Socialnet'
)
SELECT AVG(education_count) AS avg_education_count
FROM (
    SELECT p.id, COUNT(e.instituition) AS education_count
    FROM people AS p
    JOIN education AS e ON p.id = e.person_id
    WHERE p.id IN (SELECT id FROM people_from_last_number)
    GROUP BY p.id
) AS education_counts;
-- 19.Составьте таблицу из полей:
⦁	name_of_fund — название фонда;
⦁	name_of_company — название компании;
⦁	amount — сумма инвестиций, которую привлекла компания в раунде.
В таблицу войдут данные о компаниях, в истории которых было больше шести важных этапов, а раунды финансирования проходили с 2012 по 2013 год включительно.
SELECT f.name AS name_of_fund,
       c.name AS name_of_company,
       fr.raised_amount AS amount
FROM investment AS inv
JOIN company AS c ON inv.company_id = c.id
JOIN fund AS f ON inv.fund_id = f.id
JOIN funding_round AS fr ON inv.funding_round_id = fr.id
WHERE c.milestones > 6
  AND fr.funded_at BETWEEN '2012-01-01' AND '2013-12-31';
-- 20. Выгрузите таблицу, в которой будут такие поля:
⦁	название компании-покупателя;
⦁	сумма сделки;
⦁	название компании, которую купили;
⦁	сумма инвестиций, вложенных в купленную компанию;
⦁	доля, которая отображает, во сколько раз сумма покупки превысила сумму вложенных в компанию инвестиций, округлённая до ближайшего целого числа.
Не учитывайте те сделки, в которых сумма покупки равна нулю. Если сумма инвестиций в компанию равна нулю, исключите такую компанию из таблицы. 
Отсортируйте таблицу по сумме сделки от большей к меньшей, а затем по названию купленной компании в лексикографическом порядке. Ограничьте таблицу первыми десятью записями.
WITH 
c2 AS (SELECT *
       FROM company
       WHERE funding_total > 0
)

SELECT c1.name AS acquiring_company_name, 
       a.price_amount, 
       c2.name AS acquired_company_name, 
       c2.funding_total, 
       ROUND(A.PRICE_AMOUNT / c2.funding_total)
FROM   acquisition AS a
LEFT JOIN company AS c1 ON c1.id = a.acquiring_company_id 
LEFT JOIN company AS c2 ON c2.id = a.acquired_company_id  
WHERE  a.price_amount > 0
AND    c2.funding_total > 0
ORDER BY  a.price_amount DESC, 
          c2.name 
LIMIT     10;
-- 21. Выгрузите таблицу, в которую войдут названия компаний из категории social, получившие финансирование с 2010 по 2013 год включительно. Проверьте, что сумма инвестиций не равна нулю. Выведите также номер месяца, в котором проходил раунд финансирования.
WITH
fr AS (SELECT company_id, 
              EXTRACT(MONTH FROM funded_at) AS funded_month
       FROM   funding_round
       WHERE  funded_at BETWEEN '2010-01-01' AND '2013-12-31'
       AND    raised_amount > 0), 

c AS (SELECT id, 
             name
      FROM   company
      WHERE  category_code = 'social') 

SELECT c.name, 
       fr.funded_month
FROM   c 
JOIN   fr ON fr.company_id = c.id
-- 22. Отберите данные по месяцам с 2010 по 2013 год, когда проходили инвестиционные раунды. Сгруппируйте данные по номеру месяца и получите таблицу, в которой будут поля:
⦁	номер месяца, в котором проходили раунды;
⦁	количество уникальных названий фондов из США, которые инвестировали в этом месяце;
⦁	количество компаний, купленных за этот месяц;
⦁	общая сумма сделок по покупкам в этом месяце.
WITH

invest AS (SELECT EXTRACT(MONTH FROM fr.funded_at) AS funded_month, 
                  COUNT(DISTINCT f.id) AS count_fund
           FROM   investment AS i 
           JOIN   funding_round AS fr ON fr.id = i.funding_round_id
           JOIN   fund AS f ON f.id = i.fund_id
           WHERE  f.country_code = 'USA'
           AND    fr.funded_at BETWEEN '2010-01-01' AND '2013-12-31'
           GROUP BY funded_month), 

acquired AS (SELECT EXTRACT(MONTH FROM acquired_at) AS acquired_month, 
                    COUNT(acquired_company_id) AS count_company, 
                    SUM(price_amount) AS sum_price_amount 
             FROM   acquisition
             WHERE  acquired_at BETWEEN '2010-01-01' AND '2013-12-31'
             GROUP BY acquired_month) 

SELECT invest.funded_month, 
       invest.count_fund, 
       acquired.count_company,
       acquired.sum_price_amount
FROM   invest
JOIN   acquired ON acquired.acquired_month = invest.funded_month;
-- 23. Составьте сводную таблицу и выведите среднюю сумму инвестиций для стран, в которых есть стартапы, зарегистрированные в 2011, 2012 и 2013 годах. Данные за каждый год должны быть в отдельном поле. Отсортируйте таблицу по среднему значению инвестиций за 2011 год от большего к меньшему.
WITH
inv_2011 AS (SELECT co.country_code, 
                    AVG(co.funding_total) 
             FROM company AS co
             WHERE EXTRACT(YEAR FROM co.founded_at) = 2011
             GROUP BY co.country_code 
             HAVING COUNT(co.id) > 0), 

inv_2012 AS (SELECT co.country_code, 
                    AVG(co.funding_total) 
             FROM company AS co 
             WHERE EXTRACT(YEAR FROM co.founded_at) = 2012 
             GROUP BY co.country_code 
             HAVING COUNT(co.id) > 0),

inv_2013 AS (SELECT co.country_code, 
                    AVG(co.funding_total) 
             FROM company AS co 
             WHERE EXTRACT(YEAR FROM co.founded_at) = 2013 
             GROUP BY co.country_code 
             HAVING COUNT(co.id) > 0)

SELECT inv_2011.country_code,
       inv_2011.avg AS inv_2011,
       inv_2012.avg AS inv_2012,
       inv_2013.avg AS inv_2013
FROM inv_2011
INNER JOIN inv_2012 ON inv_2012.country_code = inv_2011.country_code
INNER JOIN inv_2013 ON inv_2013.country_code = inv_2011.country_code
ORDER BY inv_2011.avg DESC;
