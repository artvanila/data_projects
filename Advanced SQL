-- Найдите количество вопросов, которые набрали больше 300 очков или как минимум 100 раз были добавлены в «Закладки».

SELECT COUNT(p.id)
FROM stackoverflow.posts AS p
JOIN stackoverflow.post_types AS p_t ON p.post_type_id = p_t.id
WHERE p_t.type = 'Question'
      AND (p.score > 300 OR p.favorites_count >= 100);

-- Сколько в среднем в день задавали вопросы с 1 по 18 ноября 2008 включительно? Результат округлите до целого числа.

WITH day_by_day AS (
    SELECT CAST(DATE_TRUNC('day', p.creation_date) AS DATE) AS day, 
           COUNT(p.id) as count
    FROM stackoverflow.posts AS p
    JOIN stackoverflow.post_types AS p_t ON p.post_type_id = p_t.id
    WHERE p_t.type = 'Question'
      AND (p.creation_date BETWEEN '2008-11-01' AND '2008-11-19')
    GROUP BY CAST(DATE_TRUNC('day', p.creation_date) AS DATE)
    ORDER BY day
)
SELECT ROUND(SUM(count)/EXTRACT(DAY FROM AGE('2008-11-19'::date, '2008-11-01'::date)), 0)
FROM day_by_day;

-- Сколько пользователей получили значки сразу в день регистрации? Выведите количество уникальных пользователей.

SELECT COUNT(DISTINCT u.id)
FROM stackoverflow.users AS u
JOIN stackoverflow.badges AS b ON u.id = b.user_id
WHERE b.creation_date::date = u.creation_date::date

-- Сколько уникальных постов пользователя с именем Joel Coehoorn получили хотя бы один голос?

SELECT COUNT(DISTINCT p.id)
FROM stackoverflow.posts AS p
JOIN stackoverflow.users AS u ON p.user_id = u.id
WHERE u.display_name = 'Joel Coehoorn'
  AND p.score > 0;

-- Выгрузите все поля таблицы vote_types. Добавьте к таблице поле rank, в которое войдут номера записей в обратном порядке. Таблица должна быть отсортирована по полю id.

SELECT *,
       ROW_NUMBER() OVER (ORDER BY id DESC) AS rank
FROM stackoverflow.vote_types
ORDER BY id;

-- Отберите 10 пользователей, которые поставили больше всего голосов типа Close. Отобразите таблицу из двух полей: идентификатором пользователя и количеством голосов. Отсортируйте данные сначала по убыванию количества голосов, потом по убыванию значения идентификатора пользователя.

SELECT u.id,
       COUNT(v_t.id)
FROM stackoverflow.users AS u
JOIN stackoverflow.votes AS v ON u.id = v.user_id
JOIN stackoverflow.vote_types AS v_t ON v.vote_type_id = v_t.id
WHERE v_t.name = 'Close'
GROUP BY u.id
ORDER BY COUNT(v_t.id) DESC, u.id DESC 
LIMIT 10;

-- Отберите 10 пользователей по количеству значков, полученных в период с 15 ноября по 15 декабря 2008 года включительно. Отобразите несколько полей:

SELECT u.id,
       COUNT(b.id) AS badge_count,
       DENSE_RANK() OVER (ORDER BY COUNT(b.id) DESC) AS rank
FROM stackoverflow.users AS u
JOIN stackoverflow.badges AS b ON u.id = b.user_id
WHERE b.creation_date BETWEEN '2008-11-15' AND '2008-12-16'
GROUP BY u.id
ORDER BY badge_count DESC, u.id ASC
LIMIT 10;

-- Сколько в среднем очков получает пост каждого пользователя?

SELECT p.title, 
       p.user_id, 
       p.score,
       ROUND(AVG(p.score) OVER (PARTITION BY p.user_id), 0) AS avg_score
FROM stackoverflow.posts AS p
WHERE p.title IS NOT NULL
  AND p.score != 0;

-- Отобразите заголовки постов, которые были написаны пользователями, получившими более 1000 значков. Посты без заголовков не должны попасть в список.

WITH badge_over_1000 AS ( 
    SELECT p.title AS title,
           COUNT(b.id) AS badge_count
    FROM stackoverflow.posts AS p
    JOIN stackoverflow.users AS u ON p.user_id = u.id
    JOIN stackoverflow.badges AS b ON u.id = b.user_id
    WHERE p.title IS NOT NULL
    GROUP BY p.title
)
SELECT title
FROM badge_over_1000
WHERE badge_count > 1000;

-- Напишите запрос, который выгрузит данные о пользователях из Канады. Разделите пользователей на три группы в зависимости от количества просмотров их профилей:

SELECT u.id AS user_id,
       u.views,
       CASE
           WHEN u.views >= 350 THEN 1
           WHEN u.views >= 100 THEN 2
           ELSE 3
       END AS group
FROM stackoverflow.users AS u
WHERE TRIM(u.location) LIKE '%Canada%'
  AND u.views > 0;

-- Дополните предыдущий запрос. Отобразите лидеров каждой группы — пользователей, которые набрали максимальное число просмотров в своей группе.

WITH row_table AS (
    SELECT u.id AS user_id,
           u.views,
           CASE
               WHEN u.views >= 350 THEN 1
               WHEN u.views >= 100 THEN 2
               ELSE 3
           END AS group_id
    FROM stackoverflow.users AS u
    WHERE TRIM(u.location) LIKE '%Canada%'
      AND u.views > 0
), max_views_table AS (
    SELECT user_id,
           views,
           group_id,
           MAX(views) OVER (PARTITION BY group_id) AS max_views_in_group
    FROM row_table
)
SELECT user_id,
       group_id,
       views
FROM max_views_table
WHERE views = max_views_in_group
ORDER BY views DESC, user_id;

-- Посчитайте ежедневный прирост новых пользователей в ноябре 2008 года.

WITH daily_counts AS (
    SELECT 
        DATE_TRUNC('day', creation_date) AS day,
        COUNT(id) AS daily_count
    FROM 
        stackoverflow.users
    WHERE 
        DATE_TRUNC('day', creation_date) BETWEEN '2008-11-01' AND '2008-11-30'
    GROUP BY 
        DATE_TRUNC('day', creation_date)
)
SELECT 
    ROW_NUMBER() OVER (ORDER BY day) AS day_number,
    daily_count,
    SUM(daily_count) OVER (ORDER BY day) AS costs_cum
FROM 
    daily_counts
ORDER BY 
    day_number;

-- Для каждого пользователя, который написал хотя бы один пост, найдите интервал между регистрацией и временем создания первого поста.
 
SELECT
    u.id AS user_id,
    MIN(p.creation_date) - u.creation_date AS time_difference
FROM
    stackoverflow.users AS u
JOIN
    stackoverflow.posts AS p
ON
    u.id = p.user_id
GROUP BY
    u.id, u.creation_date
HAVING
    COUNT(p.id) > 0;


-- Общая сумма просмотров у постов, опубликованных в каждый месяц 2008 года, отсортированная по убыванию.

SELECT
    CAST(DATE_TRUNC('month', p.creation_date) AS DATE) AS month,
    SUM(p.views_count) AS total_views
FROM
    stackoverflow.posts AS p
WHERE
    EXTRACT(YEAR FROM p.creation_date) = 2008
GROUP BY
    CAST(DATE_TRUNC('month', p.creation_date) AS DATE)
ORDER BY
    total_views DESC;

-- Самые активные пользователи, которые в первый месяц после регистрации дали больше 100 ответов.

SELECT u.display_name, COUNT(DISTINCT p.user_id) AS post_count
FROM stackoverflow.posts AS p
JOIN stackoverflow.post_types AS pt ON pt.id = p.post_type_id
JOIN stackoverflow.users AS u ON u.id = p.user_id
WHERE  p.creation_date::date <= u.creation_date::date + INTERVAL '1 month'
   AND p.creation_date::date >= u.creation_date::date
AND pt.type = 'Answer'
GROUP BY u.display_name
HAVING COUNT(p.id) > 100
ORDER BY u.display_name;

-- Количество постов за 2008 год по месяцам для пользователей, зарегистрировавшихся в сентябре 2008 года и сделавших пост в декабре.

SELECT
    CAST(DATE_TRUNC('month', p.creation_date) AS DATE) AS month,
    COUNT(DISTINCT p.id) AS posts_count
FROM stackoverflow.posts AS p
JOIN stackoverflow.users AS u ON p.user_id = u.id
WHERE p.user_id IN (
    SELECT DISTINCT user_id
    FROM stackoverflow.posts
    WHERE creation_date >= '2008-12-01'
      AND creation_date < '2009-01-01'
)
AND u.creation_date >= '2008-09-01'
AND u.creation_date < '2008-10-01'
GROUP BY CAST(DATE_TRUNC('month', p.creation_date) AS DATE)
ORDER BY month DESC;

-- Идентификатор пользователя, дата создания поста, количество просмотров и сумма просмотров с накоплением.

SELECT user_id,
       creation_date,
       views_count,
       SUM(views_count) OVER (PARTITION BY user_id ORDER BY creation_date)
FROM stackoverflow.posts
ORDER BY user_id, creation_date;

-- Среднее количество дней, в которые пользователи взаимодействовали с платформой в период с 1 по 7 декабря 2008 года.

WITH UserDays AS (
    SELECT 
        p.user_id,
        DATE(p.creation_date) AS post_day
    FROM stackoverflow.posts AS p
    WHERE p.creation_date >= '2008-12-01'
      AND p.creation_date <= '2008-12-07'
    GROUP BY p.user_id, DATE(p.creation_date)
),
UserDaysCount AS (
    SELECT 
        user_id,
        COUNT(DISTINCT post_day) AS days_count
    FROM UserDays
    GROUP BY user_id
)
SELECT ROUND(AVG(days_count)) AS average_days
FROM UserDaysCount;

-- Изменение количества постов ежемесячно с 1 сентября по 31 декабря 2008 года.

WITH monthly_posts AS ( 
SELECT  
DATE_PART('month', p.creation_date) AS month_num, 
COUNT(p.id) AS post_count 
FROM stackoverflow.posts p 
WHERE p.creation_date BETWEEN '2008-09-01' AND '2008-12-31' 
GROUP BY DATE_PART('month', p.creation_date) 
ORDER BY month_num 
) 
SELECT 
    month_num, 
    post_count, 
    ROUND( 
        CASE WHEN prev_post_count = 0 THEN 0 
        ELSE (post_count - prev_post_count) * 100.0 / prev_post_count 
        END, 
        2 
    ) AS percent_change 
FROM ( 
    SELECT 
        *, 
        LAG(post_count, 1) OVER (ORDER BY month_num) AS prev_post_count 
    FROM monthly_posts 
) t;

-- Пользователь с наибольшим количеством постов и его активность за октябрь 2008 года.

WITH TopUser AS (
    SELECT user_id
    FROM stackoverflow.posts
    GROUP BY user_id
    ORDER BY COUNT(*) DESC
    LIMIT 1
),
OctoberPosts AS (
    SELECT p.creation_date
    FROM stackoverflow.posts p
    JOIN TopUser tu ON p.user_id = tu.user_id
    WHERE p.creation_date >= '2008-10-01'
      AND p.creation_date < '2008-11-01'
),
WeeklyPosts AS (
    SELECT
        EXTRACT(WEEK FROM creation_date) AS week_number,
        MAX(creation_date) AS last_post_date
    FROM OctoberPosts
    GROUP BY EXTRACT(WEEK FROM creation_date)
    ORDER BY week_number
)
SELECT week_number, last_post_date
FROM WeeklyPosts;